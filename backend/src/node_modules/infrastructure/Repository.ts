/**
 * Created by jose on 15/07/2015.
 */
import WaitForPromise from "infrastructure/WaitForPromise";
import sequelize = require("sequelize");
import {Instance} from "sequelize";

export interface SequelizeRepository<ActiveRecord extends Instance<DbRow>, DbRow> {
    schema: sequelize.Model<ActiveRecord, DbRow>;
}

export class SequelizeRepositoryBase<ActiveRecord
extends Instance<DbRow>, DbRow>
implements SequelizeRepository<ActiveRecord, DbRow> {

    protected wait: <T>(arg: Promise<T>) => T;
    public schema: sequelize.Model<ActiveRecord, DbRow>;

    constructor(schema: sequelize.Model<ActiveRecord, DbRow>, wait?: <T>(arg: Promise<T>) => T) {
        this.schema = schema;
        this.wait = wait || WaitForPromise;
    }
}
