/**
 * Created by jose on 13/07/2015.
 */
import assert from "framework/Assert";
const express = require("express");
import {ExpressMiddleware} from "express/middlewares/ExpressMiddleware";

export interface RouterOptions {
    routing: any;
    folder: any;
    router?: any;
}

export default class ApiRouter implements ExpressMiddleware {

    private routing: any;
    private router: any;
    private folder: any;

    constructor(options: RouterOptions) {
        assert(options.routing, "routing: null");
        assert(options.folder, "folder: null");
        this.routing = options.routing;
        this.router = options.router || express.Router();
        this.folder = options.folder;
    }

    public setup(listener: any) {
        this.routing.fillRoutes(this.router, this._getHandlers());
        listener.use(this.folder, this.router);
    }

    private _getHandlers() {
        const handle = this.routing.handlers();
        Object.keys(handle).map((key: any) => {
            const fn = handle[key];
            handle[key] = (req: any, res: any) => res.send(JSON.stringify(fn(req, res)));
        });

        return handle;
    }
}

