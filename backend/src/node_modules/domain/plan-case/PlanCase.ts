/**
 * Created by x on 30/08/16.
 */

// WIP: remove whatever is not needed

import SequelizeConnection from "infrastructure/SequelizeConnection";
const Sequelize = SequelizeConnection.Sequelize;
const Connection = SequelizeConnection.connection;
import {InvalidArgumentException} from "domain/Exception";
import {Entity, AbstractEntity, CreateEntityData, EntityDbRow, EntityDTO} from "domain/Entity";
import {UUID, GenerateRandomUUID} from "domain/UUID";
import {Instance} from "sequelize";
import sequelize = require("sequelize");


export interface PlanCase extends Entity<PlanCaseActiveRecord, PlanCaseDTO> {
}

export interface PlanCaseDTO extends EntityDTO {
    plan_case_id: string;
    plan_id: string;
    plan_title: string;
    plan_name: string;
    uuid: string;
    company_name: string;
    area_of_cover: string;
    master_areas_of_cover: string;
    list_of_cover_country_ids: string;
    area_of_residence_plan_availability: string;
    list_of_residence_plan_availability_country_ids: string;
    age_minimum: string;
    age_maximum: string;
    currency: string;
    annual_premium: string;
    excess: string;
    maximum_cover: number;
    maximum_cover_periodicity: string;
    excess_periodicity: string;
    outpatient_cover_maximum: string;
    outpatient_cover_periodicity: string;
    outpatient_cover: string;
    outpatient_cover_information: string;
    dental_cover_maximum: string;
    dental_cover_periodicity: string;
    dental_cover: string;
    dental_cover_information: string;
    maternity_cover_maximum: string;
    maternity_cover_periodicity: string;
    maternity_cover: string;
    maternity_cover_information: string;
    optical_cover_maximum: string;
    optical_cover_periodicity: string;
    optical_cover: string;
    optical_cover_information: string;
    other_highlights: string;
    only_expat_insurance: string;
    logo_url: string;
    benefits_schedule_pdf_url: string;
    general_conditions_pdf_url: string;
    application_form_pdf_url: string;
    co_branding: string;
    co_branding_link: string;
    electronic_signature_application_link: string;
}

export interface CreatePlanCaseData extends CreateEntityData {
    uuid: UUID;
    plan_id: string;
    plan_case_id: string;
    plan_title: string;
    plan_name: string;
    company_name: string;
    area_of_cover: string;
    master_areas_of_cover: string;
    list_of_cover_country_ids: string;
    area_of_residence_plan_availability: string;
    list_of_residence_plan_availability_country_ids: string;
    age_minimum: string;
    age_maximum: string;
    currency: string;
    annual_premium: string;
    excess: string;
    maximum_cover: number;
    maximum_cover_periodicity: string;
    excess_periodicity: string;
    outpatient_cover_maximum: string;
    outpatient_cover_periodicity: string;
    outpatient_cover: string;
    outpatient_cover_information: string;
    dental_cover_maximum: string;
    dental_cover_periodicity: string;
    dental_cover: string;
    dental_cover_information: string;
    maternity_cover_maximum: string;
    maternity_cover_periodicity: string;
    maternity_cover: string;
    maternity_cover_information: string;
    optical_cover_maximum: string;
    optical_cover_periodicity: string;
    optical_cover: string;
    optical_cover_information: string;
    other_highlights: string;
    only_expat_insurance: string;
    logo_url: string;
    benefits_schedule_pdf_url: string;
    general_conditions_pdf_url: string;
    application_form_pdf_url: string;
    co_branding: string;
    co_branding_link: string;
    electronic_signature_application_link: string;
}

export class InvalidPlanCaseArgumentException extends InvalidArgumentException {}

export function CreatePlanCase(plan_case: CreatePlanCaseData, uuid: UUID = GenerateRandomUUID()): PlanCase {
    return new PlanCaseImpl(PlanCaseImpl.SCHEMA.build({
        plan_id: plan_case.plan_id,
        plan_case_id: plan_case.plan_case_id,
        uuid: uuid.value,
        createdAt: plan_case.createdAt,
        plan_title: plan_case.plan_title,
        plan_name: plan_case.plan_name,
        company_name: plan_case.company_name,
        area_of_cover: plan_case.area_of_cover,
        master_areas_of_cover: plan_case.master_areas_of_cover,
        list_of_cover_country_ids: plan_case.list_of_cover_country_ids,
        area_of_residence_plan_availability: plan_case.area_of_residence_plan_availability,
        list_of_residence_plan_availability_country_ids: plan_case.list_of_residence_plan_availability_country_ids,
        age_minimum: plan_case.age_minimum,
        age_maximum: plan_case.age_maximum,
        currency: plan_case.currency,
        annual_premium: "" + Math.round(+plan_case.annual_premium + 0.5),
        excess: plan_case.excess,
        maximum_cover: plan_case.maximum_cover,
        maximum_cover_periodicity: plan_case.maximum_cover_periodicity,
        excess_periodicity: plan_case.excess_periodicity,
        outpatient_cover_maximum: plan_case.outpatient_cover_maximum,
        outpatient_cover_periodicity: plan_case.outpatient_cover_periodicity,
        outpatient_cover: plan_case.outpatient_cover,
        outpatient_cover_information: plan_case.outpatient_cover_information,
        dental_cover_maximum: plan_case.dental_cover_maximum,
        dental_cover_periodicity: plan_case.dental_cover_periodicity,
        dental_cover: plan_case.dental_cover,
        dental_cover_information: plan_case.dental_cover_information,
        maternity_cover_maximum: plan_case.maternity_cover_maximum,
        maternity_cover_periodicity: plan_case.maternity_cover_periodicity,
        maternity_cover: plan_case.maternity_cover,
        maternity_cover_information: plan_case.maternity_cover_information,
        optical_cover_maximum: plan_case.optical_cover_maximum,
        optical_cover_periodicity: plan_case.optical_cover_periodicity,
        optical_cover: plan_case.optical_cover,
        optical_cover_information: plan_case.optical_cover_information,
        other_highlights: plan_case.other_highlights,
        only_expat_insurance: plan_case.only_expat_insurance,
        logo_url: plan_case.logo_url,
        benefits_schedule_pdf_url: plan_case.benefits_schedule_pdf_url,
        general_conditions_pdf_url: plan_case.general_conditions_pdf_url,
        application_form_pdf_url: plan_case.application_form_pdf_url,
        co_branding: plan_case.co_branding,
        co_branding_link: plan_case.co_branding_link,
        electronic_signature_application_link: plan_case.electronic_signature_application_link,
    }));
}

export function PlanCaseFromActiveRecord(record: PlanCaseActiveRecord): PlanCase {
    return new PlanCaseImpl(record);
}

export interface PlanCaseDbRow extends EntityDbRow {
    plan_id: string;
    plan_case_id: string;
    plan_title: string;
    plan_name: string;
    uuid: string;
    company_name: string;
    area_of_cover: string;
    master_areas_of_cover: string;
    list_of_cover_country_ids: string;
    area_of_residence_plan_availability: string;
    list_of_residence_plan_availability_country_ids: string;
    age_minimum: string;
    age_maximum: string;
    currency: string;
    annual_premium: string;
    excess: string;
    maximum_cover: number;
    maximum_cover_periodicity: string;
    excess_periodicity: string;
    outpatient_cover_maximum: string;
    outpatient_cover_periodicity: string;
    outpatient_cover: string;
    outpatient_cover_information: string;
    dental_cover_maximum: string;
    dental_cover_periodicity: string;
    dental_cover: string;
    dental_cover_information: string;
    maternity_cover_maximum: string;
    maternity_cover_periodicity: string;
    maternity_cover: string;
    maternity_cover_information: string;
    optical_cover_maximum: string;
    optical_cover_periodicity: string;
    optical_cover: string;
    optical_cover_information: string;
    other_highlights: string;
    only_expat_insurance: string;
    logo_url: string;
    benefits_schedule_pdf_url: string;
    general_conditions_pdf_url: string;
    application_form_pdf_url: string;
    co_branding: string;
    co_branding_link: string;
    electronic_signature_application_link: string;
}

export interface PlanCaseActiveRecord extends Instance<PlanCaseDbRow>, PlanCaseDbRow {

}

export type PlanCaseSchema = sequelize.Model<PlanCaseActiveRecord, PlanCaseDbRow>;

export class PlanCaseImpl extends AbstractEntity<PlanCaseActiveRecord, PlanCaseDTO> implements PlanCase {

    public static SCHEMA: PlanCaseSchema = Connection.define<PlanCaseActiveRecord, PlanCaseDbRow>(
        "company_plans",
        {
            plan_id: {
                type: Sequelize.STRING,
            },
            plan_case_id: {
                type: Sequelize.STRING,
            },
            plan_title: {
                type: Sequelize.STRING,
            },
            plan_name: {
                type: Sequelize.STRING,
            },
            uuid: {
                allowNull: false,
                primaryKey: true,
                type: Sequelize.STRING,
            },
            company_name: {
                type: Sequelize.STRING,
            },
            area_of_cover: {
                type: Sequelize.STRING,
            },
            master_areas_of_cover: {
                type: Sequelize.STRING,
            },
            list_of_cover_country_ids: {
                type: Sequelize.STRING,
            },
            area_of_residence_plan_availability: {
                type: Sequelize.STRING,
            },
            list_of_residence_plan_availability_country_ids: {
                type: Sequelize.STRING,
            },
            age_minimum: {
                type: Sequelize.STRING,
            },
            age_maximum: {
                type: Sequelize.STRING,
            },
            currency: {
                type: Sequelize.STRING,
            },
            annual_premium: {
                type: Sequelize.STRING,
            },
            excess: {
                type: Sequelize.STRING,
            },
            maximum_cover: {
                type: Sequelize.INTEGER,
            },
            maximum_cover_periodicity: {
                type: Sequelize.STRING,
            },
            excess_periodicity: {
                type: Sequelize.STRING,
            },
            outpatient_cover_maximum: {
                type: Sequelize.STRING,
            },
            outpatient_cover_periodicity: {
                type: Sequelize.STRING,
            },
            outpatient_cover: {
                type: Sequelize.BOOLEAN,
            },
            outpatient_cover_information: {
                type: Sequelize.STRING,
            },
            dental_cover_maximum: {
                type: Sequelize.STRING,
            },
            dental_cover_periodicity: {
                type: Sequelize.STRING,
            },
            dental_cover: {
                type: Sequelize.BOOLEAN,
            },
            dental_cover_information: {
                type: Sequelize.STRING,
            },
            maternity_cover_maximum: {
                type: Sequelize.STRING,
            },
            maternity_cover_periodicity: {
                type: Sequelize.STRING,
            },
            maternity_cover: {
                type: Sequelize.BOOLEAN,
            },
            maternity_cover_information: {
                type: Sequelize.STRING,
            },
            optical_cover_maximum: {
                type: Sequelize.STRING,
            },
            optical_cover_periodicity: {
                type: Sequelize.STRING,
            },
            optical_cover: {
                type: Sequelize.BOOLEAN,
            },
            optical_cover_information: {
                type: Sequelize.STRING,
            },
            other_highlights: {
                type: Sequelize.STRING,
            },
            only_expat_insurance: {
                type: Sequelize.BOOLEAN,
            },
            logo_url: {
                type: Sequelize.STRING,
            },
            benefits_schedule_pdf_url: {
                type: Sequelize.STRING,
            },
            general_conditions_pdf_url: {
                type: Sequelize.STRING,
            },
            application_form_pdf_url: {
                type: Sequelize.STRING,
            },
            co_branding: {
                type: Sequelize.BOOLEAN,
            },
            co_branding_link: {
                type: Sequelize.STRING,
            },
            electronic_signature_application_link: {
                type: Sequelize.STRING,
            },
        }, {
            freezeTableName: true,
            paranoid: true,
        }
    );

    protected _toJSON(): PlanCaseDTO {
        return {
            plan_case_id: this.record.plan_case_id,
            plan_id: this.record.plan_id,
            createdAt: this.record.createdAt,
            plan_title: this.record.plan_title,
            plan_name: this.record.plan_name,
            uuid: this.record.uuid,
            company_name: this.record.company_name,
            area_of_cover: this.record.area_of_cover,
            master_areas_of_cover: this.record.master_areas_of_cover,
            list_of_cover_country_ids: this.record.list_of_cover_country_ids,
            area_of_residence_plan_availability: this.record.area_of_residence_plan_availability,
            list_of_residence_plan_availability_country_ids: this.record.list_of_residence_plan_availability_country_ids,
            age_minimum: this.record.age_minimum,
            age_maximum: this.record.age_maximum,
            currency: this.record.currency,
            annual_premium: this.record.annual_premium,
            excess: this.record.excess,
            maximum_cover: this.record.maximum_cover,
            maximum_cover_periodicity: this.record.maximum_cover_periodicity,
            excess_periodicity: this.record.excess_periodicity,
            outpatient_cover_maximum: this.record.outpatient_cover_maximum,
            outpatient_cover_periodicity: this.record.outpatient_cover_periodicity,
            outpatient_cover: this.record.outpatient_cover,
            outpatient_cover_information: this.record.outpatient_cover_information,
            dental_cover_maximum: this.record.dental_cover_maximum,
            dental_cover_periodicity: this.record.dental_cover_periodicity,
            dental_cover: this.record.dental_cover,
            dental_cover_information: this.record.dental_cover_information,
            maternity_cover_maximum: this.record.maternity_cover_maximum,
            maternity_cover_periodicity: this.record.maternity_cover_periodicity,
            maternity_cover: this.record.maternity_cover,
            maternity_cover_information: this.record.maternity_cover_information,
            optical_cover_maximum: this.record.optical_cover_maximum,
            optical_cover_periodicity: this.record.optical_cover_periodicity,
            optical_cover: this.record.optical_cover,
            optical_cover_information: this.record.optical_cover_information,
            other_highlights: this.record.other_highlights,
            only_expat_insurance: this.record.only_expat_insurance,
            logo_url: this.record.logo_url,
            benefits_schedule_pdf_url: this.record.benefits_schedule_pdf_url,
            general_conditions_pdf_url: this.record.general_conditions_pdf_url,
            application_form_pdf_url: this.record.application_form_pdf_url,
            co_branding: this.record.co_branding,
            co_branding_link: this.record.co_branding_link,
            electronic_signature_application_link: this.record.electronic_signature_application_link,
        };
    }

}
