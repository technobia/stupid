import {InvalidArgumentException} from "domain/Exception";
import assert from "framework/Assert";

type TextType = "tiny" | "small" | "medium" | "long";

export class NonEmptyString {
    private _value: string;
    constructor(value: string) {
        value = value.trim();
        assert.nonEmptyString(value, InvalidArgumentException);
        this._value = value;
    }

    get value(): string {
        return this._value;
    }
}

export class Text {
    private _value: string;
    constructor(value: string, type: TextType) {
        const size = (type === "tiny") ? 10 : ((type === "small") ? 50 : ( (type === "medium") ? 250 : 1000 ));
        assert.isValidTextSize({text: value, size}, InvalidArgumentException);
        this._value = value;
    }
    get value(): string {
        return this._value;
    }
}
