/**
 * Created by lehuynhngocthuy on 9/24/15.
 */

function removeDate(obj: any) {
    if (obj) {
        delete obj.deletedAt;
        delete obj.updatedAt;
        delete obj.createdAt;
    }
    return obj;
}

function removeDateAndId(obj: any) {
    if (obj) {
        delete obj.deletedAt;
        delete obj.updatedAt;
        delete obj.createdAt;
        delete obj.id;
    }
    return obj;
}

export function assertEqual(actual: any, expected: any) {
    actual = actual ? (actual instanceof Array ? actual.map( (o: any) => removeDate(o.dataValues)) :
        removeDate(actual.dataValues)) : actual;
    expected = expected ? (expected instanceof Array ? expected.map( (o: any) => removeDate(o.dataValues)) :
        removeDate(expected.dataValues)) : expected;
    expect(actual).to.eql(expected);
}

export function assertEqualNoId(actual: any, expected: any) {
    actual = actual ? (actual instanceof Array ? actual.map( (o: any) => removeDateAndId(o.dataValues)) :
        removeDateAndId(actual.dataValues)) : actual;
    expected = expected ? (expected instanceof Array ? expected.map( (o: any) => removeDateAndId(o.dataValues)) :
        removeDateAndId(expected.dataValues)) : expected;
    expect(actual).to.eql(expected);
}

export function assertJSONEqual(actual: any, expected: any) {
    actual = actual instanceof Array ? actual.map((o: any) => removeDate(o)) : removeDate(actual);
    expected = expected instanceof Array ? expected.map((o: any) => removeDate(o)) : removeDate(expected);
    expect(actual).to.eql(expected);
}
